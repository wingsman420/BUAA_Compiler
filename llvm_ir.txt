declare i32 @getint()
declare i32 @getchar()
declare void @putint(i32)
declare void @putch(i32)
declare void @putstr(i8*)




@const_var1 = global i32 17
@const_var2 = global i32 3
@arr = dso_local global [3 x i32] [i32 1, i32 2, i32 3]
@const_var3 = global i8 99
@s = dso_local global [5 x i8] c"abcd\00"
@str = dso_local global [5 x i8] c"abcd\00"
@cot_var1 = global i32 20
@var1 = global i32 5
@var2 = global i32 2
@var3 = global i32 10
@var4 = global i8 7
@var5 = global i8 8




@.str.0 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"22371491\0A\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"pass\0A\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"failed\0A\00", align 1




define dso_local i32 @f3( i32* %0, i32* %1, i32 %2, i32 %3){
	%5 = alloca i32*
	store i32* %0, i32** %5
	%6 = alloca i32*
	store i32* %1, i32** %6
	%7 = alloca i32
	store i32 %2, i32* %7
	%8 = alloca i32
	store i32 %3, i32* %8
	%9 = alloca i32
	%10 = add nsw i32 0,0
	store i32 %10, i32* %9
	%11 = add nsw i32 0,1
	br label %block2
block2:
	%12 = load i32, i32* %9
	%13 = add nsw i32 0,0
	%14 = icmp eq i32 %12, %13
	%15 = zext i1 %14 to i32 
	%16 = icmp ne i32 %15, 0
	br i1 %16 , label %block0 , label %block1
block3:
	%17 = add nsw i32 0,1
	%18 = load i32, i32* %9
	%19 = add nsw i32 %17 , %18
	store i32 %19, i32* %9
	br label %block2
block0:
	%20 = load i32, i32* %8
	%21 = load i32, i32* %7
	%22 = add nsw i32 %20 , %21
	store i32 %22, i32* %7
	br label %block3
block1:
	%23 = load i32, i32* %8
	%24 = load i32, i32* %7
	%25 = load i32, i32* %9
	%26 = load i32*, i32** %6
	%27 = getelementptr i32, i32* %26,i32 %25
	%28 = load i32, i32* %27
	%29 = add nsw i32 %24 , %28
	%30 = load i32, i32* %9
	%31 = load i32*, i32** %5
	%32 = getelementptr i32, i32* %31,i32 %30
	%33 = load i32, i32* %32
	%34 = mul nsw i32 %29 , %33
	%35 = sub nsw i32 %34 , %23
	ret i32 %35
}


define dso_local i32 @f4( i32 %0, i32 %1){
	%3 = alloca i32
	store i32 %0, i32* %3
	%4 = alloca i32
	store i32 %1, i32* %4
	%5 = load i32, i32* %4
	%6 = load i32, i32* %3
	%7 = add nsw i32 %5 , %6
	ret i32 %7
}


define dso_local i8 @f5( i8 %0, i8 %1){
	%3 = alloca i8
	store i8 %0, i8* %3
	%4 = alloca i8
	store i8 %1, i8* %4
	%5 = load i8, i8* %4
	%6 = zext i8 %5 to i32 
	%7 = load i8, i8* %3
	%8 = zext i8 %7 to i32 
	%9 = add nsw i32 %6 , %8
	%10 = trunc i32 %9 to i8 
	ret i8 %10
}


define dso_local i32 @f7( i32 %0){
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	ret i32 %3
}


define dso_local i8 @f8( i8 %0){
	%2 = alloca i8
	store i8 %0, i8* %2
	%3 = load i8, i8* %2
	%4 = zext i8 %3 to i32 
	%5 = trunc i32 %4 to i8 
	ret i8 %5
}


define dso_local i32 @f6( ){
	%1 = add nsw i32 0,0
	ret i32 %1
}


define dso_local void @f2( i32 %0){
	%2 = alloca i32
	store i32 %0, i32* %2
	%3 = load i32, i32* %2
	call void @putint(i32 %3)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.0, i64 0, i64 0))
	ret void
blockLcy0:
	ret void
}


define dso_local void @f9( ){
	ret void
blockLcy1:
	ret void
}


define dso_local i32 @main( ){
	call void @putstr(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i64 0, i64 0))
	%1 = alloca i32
	%2 = add nsw i32 0,0
	store i32 %2, i32* %1
	call void @f9()
	%3 = alloca i32
	%4 = add nsw i32 0,1
	store i32 %4, i32* %3
	%5 = alloca [3 x i32]
	%6 = getelementptr [3 x i32], [3 x i32]* %5, i32 0, i32 0
	%7 = alloca [3 x i32]
	%8 = getelementptr [3 x i32], [3 x i32]* %7, i32 0, i32 0
	%9 = add nsw i32 0,1
	%10 = getelementptr i32, i32* %8,i32 0
	store i32 %9, i32* %10
	%11 = add nsw i32 0,2
	%12 = getelementptr i32, i32* %8,i32 1
	store i32 %11, i32* %12
	%13 = add nsw i32 0,3
	%14 = getelementptr i32, i32* %8,i32 2
	store i32 %13, i32* %14
	%15 = alloca [3 x i32]
	%16 = getelementptr [3 x i32], [3 x i32]* %15, i32 0, i32 0
	%17 = add nsw i32 0,4
	%18 = getelementptr i32, i32* %16,i32 0
	store i32 %17, i32* %18
	%19 = add nsw i32 0,5
	%20 = getelementptr i32, i32* %16,i32 1
	store i32 %19, i32* %20
	%21 = add nsw i32 0,6
	%22 = getelementptr i32, i32* %16,i32 2
	store i32 %21, i32* %22
	%23 = alloca i32
	%24 = getelementptr i32, i32* %8,i32 0
	%25 = getelementptr i32, i32* %16,i32 0
	%26 = load i32, i32* %1
	%27 = load i32, i32* %3
	%28 = call i32 @f3(i32* %24,i32* %25,i32 %26,i32 %27)
	store i32 %28, i32* %23
	%29 = alloca i32
	%30 = add nsw i32 0,1
	store i32 %30, i32* %29
	%31 = alloca i8
	%32 = add nsw i32 0,99
	%33 = trunc i32 %32 to i8 
	store i8 %33, i8* %31
	%34 = add nsw i32 0,99
	%35 = trunc i32 %34 to i8 
	%36 = call i8 @f8(i8 %35)
	%37 = zext i8 %36 to i32 
	%38 = trunc i32 %37 to i8 
	store i8 %38, i8* %31
	%39 = add nsw i32 0,10
	%40 = load i32, i32* %29
	%41 = load i32, i32* %29
	%42 = load i32, i32* %1
	%43 = add nsw i32 %41 , %42
	%44 = add nsw i32 %40 , %43
	%45 = add nsw i32 %39 , %44
	store i32 %45, i32* %1
	%46 = load i32, i32* %1
	%47 = mul nsw i32 %46 , -1
	store i32 %47, i32* %1
	%48 = load i32, i32* %1
	%49 = mul nsw i32 %48 , -1
	%50 = load i32, i32* %1
	%51 = add nsw i32 0,2
	%52 = load i32, i32* %1
	%53 = sdiv i32 %52 , %51
	store i32 %53, i32* %1
	%54 = add nsw i32 0,2
	%55 = load i32, i32* %1
	%56 = srem i32 %55 , %54
	store i32 %56, i32* %1
	br label %block4
block4:
	%57 = load i32, i32* %1
	%58 = icmp eq i32 %57, 0
	%59 = zext i1 %58 to i32 
	%60 = icmp ne i32 %59, 0
	br i1 %60 , label %block5 , label %block6
block5:
	br label %block6
block6:
	%61 = add nsw i32 0,103
	%62 = trunc i32 %61 to i8 
	%63 = add nsw i32 0,102
	%64 = trunc i32 %63 to i8 
	%65 = call i8 @f5(i8 %62,i8 %64)
	%66 = zext i8 %65 to i32 
	%67 = trunc i32 %66 to i8 
	store i8 %67, i8* %31
	%68 = alloca i32
	%69 = add nsw i32 0,1
	%70 = load i32, i32* %1
	%71 = add nsw i32 %69 , %70
	store i32 %71, i32* %68
	%72 = load i32, i32* %1
	store i32 %72, i32* %68
	%73 = call i32 @getchar()
	%74 = trunc i32 %73 to i8 
	store i8 %74, i8* %31
	%75 = alloca i32
	%76 = add nsw i32 0,4
	store i32 %76, i32* %75
	%77 = alloca i32
	%78 = add nsw i32 0,1
	store i32 %78, i32* %77
	%79 = alloca i32
	%80 = add nsw i32 0,0
	%81 = call i32 @f7(i32 %80)
	store i32 %81, i32* %79
	%82 = call i32 @getint()
	store i32 %82, i32* %77
	%83 = load i32, i32* %1
	%84 = load i32, i32* %75
	%85 = call i32 @f4(i32 %83,i32 %84)
	store i32 %85, i32* %77
	%86 = add nsw i32 0,0
	store i32 %86, i32* %79
	br label %block9
block9:
	%87 = load i32, i32* %79
	%88 = load i32, i32* %75
	%89 = icmp slt i32 %87, %88
	%90 = zext i1 %89 to i32 
	%91 = icmp ne i32 %90, 0
	br i1 %91 , label %block7 , label %block8
block10:
	%92 = add nsw i32 0,1
	%93 = load i32, i32* %79
	%94 = add nsw i32 %92 , %93
	store i32 %94, i32* %79
	br label %block9
block7:
	%95 = add nsw i32 0,3
	%96 = mul nsw i32 %95 , -1
	%97 = mul nsw i32 %96 , -1
	%98 = load i32, i32* %29
	%99 = sdiv i32 %98 , %97
	%100 = add nsw i32 0,2
	%101 = add nsw i32 0,1
	%102 = load i32, i32* %79
	%103 = add nsw i32 %101 , %102
	%104 = load i32, i32* %75
	%105 = sdiv i32 %104 , %103
	%106 = srem i32 %105 , %100
	%107 = add nsw i32 0,1
	%108 = mul nsw i32 %107 , -1
	%109 = load i32, i32* %1
	%110 = mul nsw i32 %108 , %109
	%111 = add nsw i32 %106 , %110
	%112 = add nsw i32 %99 , %111
	store i32 %112, i32* %77
	%113 = load i32, i32* %77
	call void @putint(i32 %113)
	call void @putstr(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0))
	br label %block11
block11:
	%114 = load i32, i32* %77
	%115 = add nsw i32 0,0
	%116 = icmp sgt i32 %114, %115
	%117 = zext i1 %116 to i32 
	%118 = icmp ne i32 %117, 0
	br i1 %118 , label %block12 , label %block13
block12:
	call void @putstr(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0))
	br label %block14
block13:
	call void @putstr(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0))
	br label %block14
block14:
	br label %block15
block15:
	%119 = load i32, i32* %79
	%120 = add nsw i32 0,0
	%121 = icmp sge i32 %119, %120
	%122 = zext i1 %121 to i32 
	%123 = icmp ne i32 %122, 0
	br i1 %123 , label %block16 , label %block17
block16:
	br label %block10
blockLcy2:
	br label %block18
block17:
	br label %block8
blockLcy3:
	br label %block18
block18:
	br label %block10
block8:
	%124 = add nsw i32 0,0
	store i32 %124, i32* %79
	br label %block21
block21:
	%125 = load i32, i32* %79
	%126 = load i32, i32* %75
	%127 = icmp slt i32 %125, %126
	%128 = zext i1 %127 to i32 
	%129 = icmp ne i32 %128, 0
	br i1 %129 , label %block19 , label %block20
block22:
	%130 = add nsw i32 0,1
	%131 = load i32, i32* %79
	%132 = add nsw i32 %130 , %131
	store i32 %132, i32* %79
	br label %block21
block19:
	br label %block20
blockLcy4:
	br label %block22
block20:
	%133 = add nsw i32 0,0
	store i32 %133, i32* %79
	br label %block25
block25:
	br label %block23
block26:
	%134 = add nsw i32 0,1
	%135 = load i32, i32* %79
	%136 = add nsw i32 %134 , %135
	store i32 %136, i32* %79
	br label %block25
block23:
	br label %block24
blockLcy5:
	br label %block26
block24:
	%137 = add nsw i32 0,0
	store i32 %137, i32* %79
	br label %block29
block29:
	%138 = load i32, i32* %79
	%139 = load i32, i32* %75
	%140 = icmp slt i32 %138, %139
	%141 = zext i1 %140 to i32 
	%142 = icmp ne i32 %141, 0
	br i1 %142 , label %block27 , label %block28
block30:
	br label %block29
block27:
	br label %block28
blockLcy6:
	br label %block30
block28:
	br label %block33
block33:
	br label %block31
block34:
	%143 = add nsw i32 0,1
	%144 = load i32, i32* %79
	%145 = add nsw i32 %143 , %144
	store i32 %145, i32* %79
	br label %block33
block31:
	br label %block32
blockLcy7:
	br label %block34
block32:
	br label %block37
block37:
	%146 = load i32, i32* %79
	%147 = load i32, i32* %75
	%148 = icmp slt i32 %146, %147
	%149 = zext i1 %148 to i32 
	%150 = icmp ne i32 %149, 0
	br i1 %150 , label %block35 , label %block36
block38:
	br label %block37
block35:
	br label %block36
blockLcy8:
	br label %block38
block36:
	%151 = add nsw i32 0,0
	store i32 %151, i32* %79
	br label %block41
block41:
	br label %block39
block42:
	br label %block41
block39:
	br label %block40
blockLcy9:
	br label %block42
block40:
	br label %block45
block45:
	br label %block43
block46:
	br label %block45
block43:
	br label %block44
blockLcy10:
	br label %block46
block44:
	br label %block47
block47:
	%152 = add nsw i32 0,0
	%153 = icmp eq i32 %152, 0
	%154 = zext i1 %153 to i32 
	%155 = icmp ne i32 %154, 0
	br i1 %155 , label %block48 , label %block49
block48:
	br label %block50
block49:
	br label %block50
block50:
	br label %block51
block51:
	%156 = load i32, i32* %75
	%157 = load i32, i32* %1
	%158 = icmp sge i32 %156, %157
	%159 = zext i1 %158 to i32 
	%160 = icmp ne i32 %159, 0
	br i1 %160 , label %block52 , label %block53
block52:
	br label %block53
block53:
	br label %block54
block54:
	%161 = load i32, i32* %75
	%162 = load i32, i32* %1
	%163 = icmp sle i32 %161, %162
	%164 = zext i1 %163 to i32 
	%165 = icmp ne i32 %164, 0
	br i1 %165 , label %block55 , label %block56
block55:
	br label %block56
block56:
	br label %block57
block57:
	%166 = load i32, i32* %75
	%167 = load i32, i32* %1
	%168 = icmp eq i32 %166, %167
	%169 = zext i1 %168 to i32 
	%170 = icmp ne i32 %169, 0
	br i1 %170 , label %block58 , label %block59
block58:
	br label %block59
block59:
	br label %block60
block60:
	%171 = load i32, i32* %75
	%172 = load i32, i32* %1
	%173 = icmp sgt i32 %171, %172
	%174 = zext i1 %173 to i32 
	%175 = icmp ne i32 %174, 0
	br i1 %175 , label %block61 , label %block62
block61:
	br label %block62
block62:
	br label %block63
block63:
	%176 = load i32, i32* %75
	%177 = load i32, i32* %1
	%178 = icmp slt i32 %176, %177
	%179 = zext i1 %178 to i32 
	%180 = icmp ne i32 %179, 0
	br i1 %180 , label %block64 , label %block65
block64:
	br label %block65
block65:
	br label %block66
block66:
	%181 = load i32, i32* %75
	%182 = load i32, i32* %1
	%183 = icmp ne i32 %181, %182
	%184 = zext i1 %183 to i32 
	%185 = icmp ne i32 %184, 0
	br i1 %185 , label %block67 , label %block68
block67:
	br label %block68
block68:
	%186 = add nsw i32 0,123
	%187 = add nsw i32 0,99
	%188 = call i32 @f6()
	br label %block69
block69:
	%189 = add nsw i32 0,0
	%190 = icmp eq i32 %189, 0
	%191 = zext i1 %190 to i32 
	%192 = icmp ne i32 %191, 0
	br i1 %192 , label %block70 , label %block71
block70:
	%193 = add nsw i32 0,1
	call void @f2(i32 %193)
	br label %block71
block71:
	br label %block72
block72:
	%194 = add nsw i32 0,0
	%195 = icmp ne i32 %194, 0
	br i1 %195 , label %block75 , label %block74
block75:
	%196 = load i32, i32* %75
	%197 = load i32, i32* %1
	%198 = icmp ne i32 %196, %197
	%199 = zext i1 %198 to i32 
	%200 = icmp ne i32 %199, 0
	br i1 %200 , label %block73 , label %block74
block73:
	br label %block74
block74:
	br label %block76
block76:
	%201 = add nsw i32 0,1
	%202 = icmp ne i32 %201, 0
	br i1 %202 , label %block77 , label %block79
block79:
	%203 = load i32, i32* %1
	%204 = add nsw i32 0,0
	%205 = icmp sgt i32 %203, %204
	%206 = zext i1 %205 to i32 
	%207 = icmp ne i32 %206, 0
	br i1 %207 , label %block77 , label %block78
block77:
	br label %block78
block78:
	br label %block80
block80:
	%208 = load i32, i32* %75
	%209 = icmp eq i32 %208, 0
	%210 = zext i1 %209 to i32 
	%211 = load i32, i32* %1
	%212 = icmp eq i32 %210, %211
	%213 = zext i1 %212 to i32 
	%214 = icmp ne i32 %213, 0
	br i1 %214 , label %block81 , label %block83
block83:
	%215 = load i32, i32* %1
	%216 = add nsw i32 0,0
	%217 = icmp sgt i32 %215, %216
	%218 = zext i1 %217 to i32 
	%219 = icmp ne i32 %218, 0
	br i1 %219 , label %block85 , label %block82
block85:
	%220 = add nsw i32 0,1
	%221 = add nsw i32 0,1
	%222 = icmp eq i32 %220, %221
	%223 = zext i1 %222 to i32 
	%224 = icmp ne i32 %223, 0
	br i1 %224 , label %block84 , label %block82
block84:
	%225 = add nsw i32 0,2
	%226 = add nsw i32 0,2
	%227 = add nsw i32 0,1
	%228 = load i32, i32* %75
	%229 = add nsw i32 %227 , %228
	%230 = srem i32 %229 , %226
	%231 = sdiv i32 %230 , %225
	%232 = icmp ne i32 %231, 0
	br i1 %232 , label %block81 , label %block82
block81:
	br label %block82
block82:
	%233 = add nsw i32 0,0
	ret i32 %233
}


